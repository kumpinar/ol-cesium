{"mappings":"IC8EI,E,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,SAlEJ,MAAM,EAAS,IAAI,EAAA,OAAU,CAAE,CAC7B,OAAQ,IAAI,EAAA,OAAU,AACxB,GAEM,EAAS,IAAI,EAAA,OAAY,CAAE,CAC/B,MAAM,CAAO,CAAE,CAAU,EACvB,IAAM,EAAY,EAAQ,GAAG,CAAC,cAAgB,QACxC,EAAc,EAAQ,GAAG,CAAC,gBAAkB,OAClD,OAAO,IAAI,EAAA,OAAW,CAAE,CACtB,KAAM,IAAI,EAAA,OAAU,CAAE,CACpB,MAAO,CACT,GACA,OAAQ,IAAI,EAAA,OAAY,CAAE,CACxB,MAAO,EACP,MAAO,CACT,EACF,EACF,EACA,OAAQ,IAAI,EAAA,OAAa,CAAE,CACzB,OAAQ,IAAI,EAAA,OAAc,CAC1B,IAAK,gCACP,EACF,GAEM,EAAM,IAAI,EAAA,OAAI,CAAE,CACpB,OAAQ,CAAC,EAAQ,EAAO,CACxB,OAAQ,QACR,KAAM,IAAI,EAAA,OAAK,CAAE,CACf,OAAQ,CAAC,EAAG,EAAE,CACd,KAAM,CACR,EACF,GAGA,EAAO,GAAG,CAAC,eAAgB,CAAA,GAG3B,MAAM,EAAO,IAAI,EAAA,OAAO,CAAE,CAAC,IAAA,EAAK,OAAQ,OAAO,GAC/C,EAAK,UAAU,CAAC,CAAA,GAIhB,MAAM,EAAQ,EAAK,cAAc,EACjC,CAAA,EAAM,SAAS,CAAC,OAAO,CAAG,CAAA,EAE1B,EAAM,KAAK,CAAC,cAAc,CAAG,CAAA,EAG7B,MAAM,EAAe,EAAO,SAAS,GACrC,EAAa,IAAI,CAAC,kBAAmB,KACH,UAA5B,EAAa,QAAQ,IACvB,EAAI,OAAO,GAAG,GAAG,CAAC,EAAO,SAAS,GAAG,SAAS,GAElD,GAGA,MAAM,EAAiB,IAAI,EAAA,OAAW,CAAE,CACtC,KAAM,IAAI,EAAA,OAAU,CAAE,CACpB,MAAO,CAAC,EAAG,IAAK,EAAG,EAAE,AACvB,GACA,OAAQ,IAAI,EAAA,OAAY,CAAE,CACxB,MAAO,CAAC,EAAG,IAAK,IAAK,EAAE,CACvB,MAAO,CACT,EACF,GAGA,EAAI,EAAE,CAAC,QAAS,AAAC,IACX,GACF,EAAgB,QAAQ,CAAC,MAE3B,CAAA,EAAkB,EAAI,qBAAqB,CACvC,EAAE,KAAK,CACP,CAAC,EAAS,IAAU,EAFxB,GAKE,EAAgB,QAAQ,CAAC,EAE7B","sources":["<anon>","examples/buildings.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire73bb\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire73bb\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $cc3xD = parcelRequire(\"cc3xD\");\n\nvar $lrKvI = parcelRequire(\"lrKvI\");\n\nvar $inIMS = parcelRequire(\"inIMS\");\n\nvar $c3RIb = parcelRequire(\"c3RIb\");\n\nvar $9DiKA = parcelRequire(\"9DiKA\");\n\nvar $l7vEP = parcelRequire(\"l7vEP\");\n\nvar $bnthu = parcelRequire(\"bnthu\");\n\nvar $bdrRp = parcelRequire(\"bdrRp\");\n\nvar $9jDAx = parcelRequire(\"9jDAx\");\n\nvar $4mWlF = parcelRequire(\"4mWlF\");\n\nvar $5DwXE = parcelRequire(\"5DwXE\");\nconst $241cfc2402b5464a$var$raster = new (0, $4mWlF.default)({\n    source: new (0, $9jDAx.default)()\n});\nconst $241cfc2402b5464a$var$vector = new (0, $bdrRp.default)({\n    style (feature, resolution) {\n        const fillColor = feature.get(\"fillColor\") || \"white\";\n        const strokeColor = feature.get(\"strokeColor\") || \"grey\";\n        return new (0, $c3RIb.default)({\n            fill: new (0, $inIMS.default)({\n                color: fillColor\n            }),\n            stroke: new (0, $lrKvI.default)({\n                color: strokeColor,\n                width: 1\n            })\n        });\n    },\n    source: new (0, $bnthu.default)({\n        format: new (0, $l7vEP.default)(),\n        url: \"data/geojson/buildings.geojson\"\n    })\n});\nconst $241cfc2402b5464a$var$map = new (0, $5DwXE.default)({\n    layers: [\n        $241cfc2402b5464a$var$raster,\n        $241cfc2402b5464a$var$vector\n    ],\n    target: \"map2d\",\n    view: new (0, $9DiKA.default)({\n        center: [\n            0,\n            0\n        ],\n        zoom: 2\n    })\n});\n// Enable the property 'olcs_shadows' for the entire set of features\n// Alternatively, you can enable 'olcs_shadows' for each feature individually\n$241cfc2402b5464a$var$vector.set(\"olcs_shadows\", true);\nconst $241cfc2402b5464a$var$ol3d = new (0, $cc3xD.default)({\n    map: $241cfc2402b5464a$var$map,\n    target: \"map3d\"\n});\n$241cfc2402b5464a$var$ol3d.setEnabled(true);\n// Be aware that enabling the following properties can impact performance\n// Enable shadow map to allow Cesium to cast scene's shadows\nconst $241cfc2402b5464a$var$scene = $241cfc2402b5464a$var$ol3d.getCesiumScene();\n$241cfc2402b5464a$var$scene.shadowMap.enabled = true;\n// Enable lighting the globe with the sun as a light source to have dynamic lighting conditions according to the position of the sun\n$241cfc2402b5464a$var$scene.globe.enableLighting = true;\nconst $241cfc2402b5464a$var$vectorSource = $241cfc2402b5464a$var$vector.getSource();\n$241cfc2402b5464a$var$vectorSource.once(\"featuresloadend\", ()=>{\n    if ($241cfc2402b5464a$var$vectorSource.getState() === \"ready\") $241cfc2402b5464a$var$map.getView().fit($241cfc2402b5464a$var$vector.getSource().getExtent());\n});\nconst $241cfc2402b5464a$var$selectionStyle = new (0, $c3RIb.default)({\n    fill: new (0, $inIMS.default)({\n        color: [\n            0,\n            255,\n            0,\n            1\n        ]\n    }),\n    stroke: new (0, $lrKvI.default)({\n        color: [\n            0,\n            153,\n            255,\n            1\n        ],\n        width: 3\n    })\n});\nlet $241cfc2402b5464a$var$selectedFeature;\n$241cfc2402b5464a$var$map.on(\"click\", (e)=>{\n    if ($241cfc2402b5464a$var$selectedFeature) $241cfc2402b5464a$var$selectedFeature.setStyle(null);\n    $241cfc2402b5464a$var$selectedFeature = $241cfc2402b5464a$var$map.forEachFeatureAtPixel(e.pixel, (feature, layer)=>feature);\n    if ($241cfc2402b5464a$var$selectedFeature) $241cfc2402b5464a$var$selectedFeature.setStyle($241cfc2402b5464a$var$selectionStyle);\n});\n\n\n//# sourceMappingURL=buildings.15b6f12a.js.map\n","import OLCesium from 'olcs';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olView from 'ol/View.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olMap from 'ol/Map.js';\n\nconst raster = new olLayerTile({\n  source: new olSourceOSM(),\n});\n\nconst vector = new olLayerVector({\n  style(feature, resolution) {\n    const fillColor = feature.get('fillColor') || 'white';\n    const strokeColor = feature.get('strokeColor') || 'grey';\n    return new olStyleStyle({\n      fill: new olStyleFill({\n        color: fillColor,\n      }),\n      stroke: new olStyleStroke({\n        color: strokeColor,\n        width: 1,\n      }),\n    });\n  },\n  source: new olSourceVector({\n    format: new olFormatGeoJSON(),\n    url: 'data/geojson/buildings.geojson',\n  }),\n});\n\nconst map = new olMap({\n  layers: [raster, vector],\n  target: 'map2d',\n  view: new olView({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n// Enable the property 'olcs_shadows' for the entire set of features\n// Alternatively, you can enable 'olcs_shadows' for each feature individually\nvector.set('olcs_shadows', true);\n\n\nconst ol3d = new OLCesium({map, target: 'map3d'});\nol3d.setEnabled(true);\n\n// Be aware that enabling the following properties can impact performance\n// Enable shadow map to allow Cesium to cast scene's shadows\nconst scene = ol3d.getCesiumScene();\nscene.shadowMap.enabled = true;\n// Enable lighting the globe with the sun as a light source to have dynamic lighting conditions according to the position of the sun\nscene.globe.enableLighting = true;\n\n\nconst vectorSource = vector.getSource();\nvectorSource.once('featuresloadend', () => {\n  if (vectorSource.getState() === 'ready') {\n    map.getView().fit(vector.getSource().getExtent());\n  }\n});\n\n\nconst selectionStyle = new olStyleStyle({\n  fill: new olStyleFill({\n    color: [0, 255, 0, 1],\n  }),\n  stroke: new olStyleStroke({\n    color: [0, 153, 255, 1],\n    width: 3,\n  }),\n});\n\nlet selectedFeature;\nmap.on('click', (e) => {\n  if (selectedFeature) {\n    selectedFeature.setStyle(null);\n  }\n  selectedFeature = map.forEachFeatureAtPixel(\n      e.pixel,\n      (feature, layer) => feature\n  );\n  if (selectedFeature) {\n    selectedFeature.setStyle(selectionStyle);\n  }\n});\n"],"names":["$241cfc2402b5464a$var$selectedFeature","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$cc3xD","$lrKvI","$inIMS","$c3RIb","$9DiKA","$l7vEP","$bnthu","$bdrRp","$9jDAx","$4mWlF","$5DwXE","$241cfc2402b5464a$var$raster","default","source","$241cfc2402b5464a$var$vector","style","feature","resolution","fillColor","get","strokeColor","fill","color","stroke","width","format","url","$241cfc2402b5464a$var$map","layers","target","view","center","zoom","set","$241cfc2402b5464a$var$ol3d","map","setEnabled","$241cfc2402b5464a$var$scene","getCesiumScene","shadowMap","enabled","globe","enableLighting","$241cfc2402b5464a$var$vectorSource","getSource","once","getState","getView","fit","getExtent","$241cfc2402b5464a$var$selectionStyle","on","e","setStyle","forEachFeatureAtPixel","pixel","layer"],"version":3,"file":"buildings.15b6f12a.js.map"}